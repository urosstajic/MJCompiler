// generated with ast extension for cup
// version 0.8
// 25/0/2022 18:29:56


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(AddTerm AddTerm);
    public void visit(DesigDodatno DesigDodatno);
    public void visit(SamoJedno SamoJedno);
    public void visit(Izvodjenje Izvodjenje);
    public void visit(ElseGrana ElseGrana);
    public void visit(ZaConstructor ZaConstructor);
    public void visit(Relop Relop);
    public void visit(FormalParamList FormalParamList);
    public void visit(DeclList DeclList);
    public void visit(ZaDodeluVrednosti ZaDodeluVrednosti);
    public void visit(Expr Expr);
    public void visit(DesignatorDodatno DesignatorDodatno);
    public void visit(DodatnoConstDecl DodatnoConstDecl);
    public void visit(MultiFac MultiFac);
    public void visit(ZaCondition ZaCondition);
    public void visit(PovratniTip PovratniTip);
    public void visit(Unmatched Unmatched);
    public void visit(TipConst TipConst);
    public void visit(OneFormalParam OneFormalParam);
    public void visit(ViseGlobalZarez ViseGlobalZarez);
    public void visit(GlobalDeclList GlobalDeclList);
    public void visit(Condition Condition);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(DDodatno DDodatno);
    public void visit(StatementMnozina StatementMnozina);
    public void visit(UnutarKlase UnutarKlase);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(GlobalNakonTip GlobalNakonTip);
    public void visit(CondTerm CondTerm);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ViseVarDecl ViseVarDecl);
    public void visit(ViseFormalParamDecl ViseFormalParamDecl);
    public void visit(ViseGlobalDecl ViseGlobalDecl);
    public void visit(SStatmen1 SStatmen1);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(Novo Novo);
    public void visit(Zagrade Zagrade);
    public void visit(ZaFinal ZaFinal);
    public void visit(ZaStatement ZaStatement);
    public void visit(DesnaStrana DesnaStrana);
    public void visit(ZaMethod ZaMethod);
    public void visit(ActPars ActPars);
    public void visit(Matched Matched);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(SingleStatement SingleStatement);
    public void visit(Term Term);
    public void visit(Relop6 Relop6);
    public void visit(Relop5 Relop5);
    public void visit(Relop4 Relop4);
    public void visit(Relop3 Relop3);
    public void visit(Relop2 Relop2);
    public void visit(Relop1 Relop1);
    public void visit(Assignop Assignop);
    public void visit(MulO3 MulO3);
    public void visit(MulO2 MulO2);
    public void visit(MulO1 MulO1);
    public void visit(AddO2 AddO2);
    public void visit(AddO1 AddO1);
    public void visit(PomocZaPracenjePristupa PomocZaPracenjePristupa);
    public void visit(Redosled Redosled);
    public void visit(DDodatno2 DDodatno2);
    public void visit(DDodatno1 DDodatno1);
    public void visit(NoDesDodatno NoDesDodatno);
    public void visit(DesDodatno DesDodatno);
    public void visit(DesignatorName DesignatorName);
    public void visit(Pomoc Pomoc);
    public void visit(Designator Designator);
    public void visit(Fac10 Fac10);
    public void visit(Fac8 Fac8);
    public void visit(Fac7 Fac7);
    public void visit(Fac6 Fac6);
    public void visit(Fac5 Fac5);
    public void visit(Fac3 Fac3);
    public void visit(Fac1 Fac1);
    public void visit(MultiF2 MultiF2);
    public void visit(MultiF1 MultiF1);
    public void visit(Term2 Term2);
    public void visit(Term1 Term1);
    public void visit(NoAddTerm NoAddTerm);
    public void visit(AddT1 AddT1);
    public void visit(Expr2 Expr2);
    public void visit(Expr1 Expr1);
    public void visit(CondFact2 CondFact2);
    public void visit(CondFact1 CondFact1);
    public void visit(KrajCondTerm2 KrajCondTerm2);
    public void visit(ZaAnd ZaAnd);
    public void visit(ZaOr ZaOr);
    public void visit(CondTerm2 CondTerm2);
    public void visit(CondTerm1 CondTerm1);
    public void visit(KrajCond2 KrajCond2);
    public void visit(Cond2 Cond2);
    public void visit(Cond1 Cond1);
    public void visit(ErrorStmt6 ErrorStmt6);
    public void visit(ZaCond ZaCond);
    public void visit(AP2 AP2);
    public void visit(AP1 AP1);
    public void visit(DS1Dodatak DS1Dodatak);
    public void visit(DesignatorDodatno5 DesignatorDodatno5);
    public void visit(DesignatorDodatno4 DesignatorDodatno4);
    public void visit(DesignatorDodatno3 DesignatorDodatno3);
    public void visit(DesignatorDodatno2 DesignatorDodatno2);
    public void visit(DesignatorDodatno1 DesignatorDodatno1);
    public void visit(DesignatorStatement5 DesignatorStatement5);
    public void visit(DesignatorStatement4 DesignatorStatement4);
    public void visit(DesignatorStatement3 DesignatorStatement3);
    public void visit(DesignatorStatement2 DesignatorStatement2);
    public void visit(DesignatorStatement1 DesignatorStatement1);
    public void visit(Statements1 Statements1);
    public void visit(ElseRec ElseRec);
    public void visit(ElseGrana1 ElseGrana1);
    public void visit(NoElse NoElse);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(YesSStatmen2 YesSStatmen2);
    public void visit(NoSStatmen1 NoSStatmen1);
    public void visit(ConditionDo ConditionDo);
    public void visit(KrajWhile KrajWhile);
    public void visit(Novo2 Novo2);
    public void visit(Novo1 Novo1);
    public void visit(StatDO StatDO);
    public void visit(SStat11 SStat11);
    public void visit(SStat10 SStat10);
    public void visit(SStat9 SStat9);
    public void visit(SStat8 SStat8);
    public void visit(SStat7 SStat7);
    public void visit(SStat6 SStat6);
    public void visit(SStat5 SStat5);
    public void visit(SStat4 SStat4);
    public void visit(SStat3 SStat3);
    public void visit(SStat2 SStat2);
    public void visit(ErrorStmt3 ErrorStmt3);
    public void visit(SStat1 SStat1);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(Label Label);
    public void visit(ZaLabelu ZaLabelu);
    public void visit(Statement3 Statement3);
    public void visit(Statement2 Statement2);
    public void visit(Statement1 Statement1);
    public void visit(Type Type);
    public void visit(PovrTip2 PovrTip2);
    public void visit(PovrTip1 PovrTip1);
    public void visit(ZaM2 ZaM2);
    public void visit(ZaM1 ZaM1);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(KrajMetode KrajMetode);
    public void visit(UMetodi UMetodi);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(ErrorStmt5 ErrorStmt5);
    public void visit(ViseFormParamDecl ViseFormParamDecl);
    public void visit(ErrorStmt4 ErrorStmt4);
    public void visit(OneFormalP OneFormalP);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(MultipleFormParam MultipleFormParam);
    public void visit(NoFormParam NoFormParam);
    public void visit(ConDel1 ConDel1);
    public void visit(NoUnutarKlase NoUnutarKlase);
    public void visit(UnutarKlaseSadrzaj1 UnutarKlaseSadrzaj1);
    public void visit(RecordName RecordName);
    public void visit(RecordDecl RecordDecl);
    public void visit(NoIzvodjenje NoIzvodjenje);
    public void visit(Izvodjenje1 Izvodjenje1);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(Zagrade2 Zagrade2);
    public void visit(Zagrade1 Zagrade1);
    public void visit(GlobalType GlobalType);
    public void visit(ErrorStmt2 ErrorStmt2);
    public void visit(ViseGlobalZ ViseGlobalZ);
    public void visit(ViseGlobalDeklarisane ViseGlobalDeklarisane);
    public void visit(NoViseGlobalDecl NoViseGlobalDecl);
    public void visit(GlobalDeclImeProm GlobalDeclImeProm);
    public void visit(GlobalDeclName GlobalDeclName);
    public void visit(ErrorStmt1 ErrorStmt1);
    public void visit(SamoJedno1 SamoJedno1);
    public void visit(GlobalNakonTipa2 GlobalNakonTipa2);
    public void visit(GlobalNakonTipa1 GlobalNakonTipa1);
    public void visit(ZaFin2 ZaFin2);
    public void visit(ZaFin1 ZaFin1);
    public void visit(GlobalDecl GlobalDecl);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(VarNameDecl VarNameDecl);
    public void visit(ViseVarDeklarisane ViseVarDeklarisane);
    public void visit(NoViseVarDecl NoViseVarDecl);
    public void visit(VarType VarType);
    public void visit(VarDecl VarDecl);
    public void visit(DodatnoCD2 DodatnoCD2);
    public void visit(DodatnoCD1 DodatnoCD1);
    public void visit(TipConst3 TipConst3);
    public void visit(TipConst2 TipConst2);
    public void visit(TipConst1 TipConst1);
    public void visit(ConstIzraz ConstIzraz);
    public void visit(ConstType ConstType);
    public void visit(ConstDecl ConstDecl);
    public void visit(DeclarationList4 DeclarationList4);
    public void visit(DeclarationList3 DeclarationList3);
    public void visit(DeclarationList2 DeclarationList2);
    public void visit(DeclarationList1 DeclarationList1);
    public void visit(NoDeclarationList NoDeclarationList);
    public void visit(KrajPrograma KrajPrograma);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
